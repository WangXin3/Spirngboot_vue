<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wxx.springbootvue.system.mapper.UserMapper">


    <select id="loadUserByUsername" resultType="com.wxx.springbootvue.system.domain.po.User">
        SELECT *
        FROM tb_user u
        WHERE u.username = #{username}
        AND u.enabled = 1
    </select>

    <select id="getUserRoleByUid" resultType="com.wxx.springbootvue.system.domain.po.Role">
        SELECT r.*
        FROM tb_user_role ur, tb_role r
        WHERE ur.role_id = r.id
        AND ur.user_id = #{id};
    </select>

    <sql id="userInfo">
        tu.id, tu.avatar, tu.username, tu.email, tu.nickname, tu.gender, tu.create_time, tu.update_time,
         tu.last_login_time, tu.enabled
    </sql>

    <select id="getUserList" resultType="com.wxx.springbootvue.system.domain.po.User">
        SELECT
        <include refid="userInfo"></include>
        FROM tb_user tu
    </select>

    <resultMap id="userMap" type="com.wxx.springbootvue.system.domain.po.User">
        <id property="id" column="id"/>

        <collection property="roles" column="id" javaType="ArrayList"
                    ofType="com.wxx.springbootvue.system.domain.po.Role"
                    select="selectRoleById"/>
    </resultMap>

    <select id="selectRoleById" resultType="com.wxx.springbootvue.system.domain.po.Role">
        SELECT tr.*
        FROM tb_user_role tur
        LEFT JOIN tb_role tr ON tur.role_id = tr.id
        WHERE tur.user_id = #{id};
    </select>

    <select id="getUserById" resultMap="userMap">
        SELECT
        <include refid="userInfo"></include>
        FROM tb_user tu
        WHERE tu.id = #{uid};
    </select>

    <resultMap id="BaseResultMap" type="com.wxx.springbootvue.system.domain.po.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="gender" jdbcType="TINYINT" property="gender"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime"/>
        <result column="enabled" jdbcType="TINYINT" property="enabled"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, avatar, username, password, email, nickname, gender, create_time, update_time,
    last_login_time, enabled
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from tb_user
        where id = #{id}
    </delete>
    <delete id="deleteUserBindingRole" parameterType="java.lang.Long">
        delete from tb_user_role
        where user_id = #{id}
    </delete>
    <insert id="insert" parameterType="com.wxx.springbootvue.system.domain.po.User">
    insert into tb_user (id, avatar, username,
      password, email, nickname,
      gender, create_time, update_time,
      last_login_time, enabled)
    values (#{id,jdbcType=INTEGER}, #{avatar,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR},
      #{gender,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
      #{lastLoginTime,jdbcType=TIMESTAMP}, #{enabled,jdbcType=TINYINT})
  </insert>
    <insert id="insertSelective" keyProperty="id" parameterType="com.wxx.springbootvue.system.domain.po.User"
            useGeneratedKeys="true">
        insert into tb_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="avatar != null">
                avatar,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="lastLoginTime != null">
                last_login_time,
            </if>
            <if test="enabled != null">
                enabled,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="avatar != null">
                #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastLoginTime != null">
                #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="enabled != null">
                #{enabled,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <insert id="insertUserBindingRole">
        insert into tb_user_role (user_id, role_id) values
        <foreach collection="roles" index="index" item="role" separator=",">
            (#{userId}, #{role.id})
        </foreach>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.wxx.springbootvue.system.domain.po.User">
        update tb_user
        <set>
            <if test="avatar != null">
                avatar = #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.wxx.springbootvue.system.domain.po.User">
    update tb_user
    set avatar = #{avatar,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      enabled = #{enabled,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <delete id="unbindingRole" parameterType="java.lang.Long">
        delete from tb_user_role
        where user_id = #{userId}
    </delete>
</mapper>